(* Homework1 Simple Test *)
(* These are basic test cases. Passing these tests does not guarantee that your code will pass the actual homework grader *)
(* To run the test, add a new line to the top of this file: use "homeworkname.sml"; *)
(* All the tests should evaluate to true. For example, the REPL should say: val test1 = true : bool *)

use "answer.sml";

val test1 = is_older((1,2,3),(2,3,4)) = true
val test1_1 = is_older((2014, 10, 30), (2014, 10, 01)) = false
val test1_2 = is_older((2014, 9, 10), (2014, 10, 30)) = true
val test1_3 = is_older((2013, 9, 10), (2014, 10, 30)) = true

val test2 = number_in_month([(2012,2,28),(2013,12,1)],2) = 1
val test2_1 = number_in_month([(2012, 2, 28), (2013, 12, 1)], 3) = 0
val test2_2 = number_in_month([(2012, 2, 28), (2013, 2, 28)], 2) = 2

val test3 = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2,3,4]) = 3
val test3_1 = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)], [5, 6, 7]) = 0
val test3_2 = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)], [1, 2, 4, 5]) = 2

val test4 = dates_in_month([(2012,2,28),(2013,12,1)],2) = [(2012,2,28)]
val test4_1 = dates_in_month([(2012,2,28),(2013,12,1)], 3) = []

val test5 = dates_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2,3,4]) = [(2012,2,28),(2011,3,31),(2011,4,28)]

val test6 = get_nth(["hi", "there", "how", "are", "you"], 2) = "there"
val test6_1 = get_nth(["hi", "there", "how", "are", "you"], 1) = "hi"
val test6_2 = get_nth(["hi", "there", "how", "are", "you"], 5) = "you"

val test7 = date_to_string((2013, 6, 1)) = "June 1, 2013"
val test7_1 = date_to_string((2014, 10, 7)) = "October 7, 2014"

val test8 = number_before_reaching_sum(10, [1,2,3,4,5]) = 3
val test8_1 = number_before_reaching_sum(5, [10, 2, 3, 4, 5]) = 0

val test9 = what_month(70) = 3

val test10 = month_range(31, 34) = [1,2,2,2]

val test11 = oldest([(2012,2,28),(2011,3,31),(2011,4,28)]) = SOME (2011,3,31)

val test12 = number_in_months_challenge([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)], [1, 2, 2, 4, 5, 5]) = 2
val test12_1 = dates_in_months_challenge([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[1, 2, 2, 3, 4, 4, 5]) = [(2012,2,28),(2011,3,31),(2011,4,28)]

val test13 = reasonable_date((0, 1, 1)) = false
val test13_1 = reasonable_date((2014, 14, 1)) = false
val test13_2 = reasonable_date((2014, 10, 10)) = true
val test13_3 = reasonable_date((2000, 2, 29)) = true
val test13_4 = reasonable_date((2001, 2, 29)) = false
val test13_5 = reasonable_date((2004, 2, 29)) = true